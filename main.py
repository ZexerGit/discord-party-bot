import os
import discord
from discord.ext import commands
from discord import app_commands

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ------------------------------
# ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ
# ------------------------------
parties = {
    "16.00": {"CH-1": {}, "CH-2": {}},
    "18.00": {"CH-1": {}, "CH-2": {}},
    "22.00": {"CH-1": {}, "CH-2": {}}
}

boss_list = ["Sylph", "Undine", "Gnome", "Salamander"]
for t in parties:
    for ch in parties[t]:
        for boss in boss_list:
            parties[t][ch][boss] = []

user_party = {}  # user_id ‚Üí (time, ch, boss)

# ------------------------------
# View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Join
# ------------------------------
class JoinView(discord.ui.View):
    def __init__(self, user):
        super().__init__(timeout=120)
        self.user = user
        self.selected_time = None
        self.selected_ch = None
        self.selected_boss = None

        # Dropdown ‡πÄ‡∏ß‡∏•‡∏≤
        self.time_select = discord.ui.Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤",
            options=[discord.SelectOption(label=t) for t in parties.keys()]
        )
        self.time_select.callback = self.time_callback
        self.add_item(self.time_select)

        # Dropdown Channel
        self.ch_select = discord.ui.Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Channel",
            options=[discord.SelectOption(label="CH-1"), discord.SelectOption(label="CH-2")]
        )
        self.ch_select.callback = self.ch_callback
        self.add_item(self.ch_select)

        # Dropdown Boss
        self.boss_select = discord.ui.Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏≠‡∏™",
            options=[discord.SelectOption(label=boss) for boss in boss_list]
        )
        self.boss_select.callback = self.boss_callback
        self.add_item(self.boss_select)

        # Confirm button
        self.confirm_button = discord.ui.Button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
        self.confirm_button.callback = self.confirm_callback
        self.add_item(self.confirm_button)

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        if interaction.user != self.user:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î UI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ", ephemeral=True)
            return False
        return True

    async def time_callback(self, interaction: discord.Interaction):
        self.selected_time = self.time_select.values[0]
        await interaction.response.defer(ephemeral=True)

    async def ch_callback(self, interaction: discord.Interaction):
        self.selected_ch = self.ch_select.values[0]
        await interaction.response.defer(ephemeral=True)

    async def boss_callback(self, interaction: discord.Interaction):
        self.selected_boss = self.boss_select.values[0]
        await interaction.response.defer(ephemeral=True)

    async def confirm_callback(self, interaction: discord.Interaction):
        if not (self.selected_time and self.selected_ch and self.selected_boss):
            await interaction.response.send_message(
                "‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡∏ó‡∏±‡πâ‡∏á ‡πÄ‡∏ß‡∏•‡∏≤, Channel, ‡πÅ‡∏•‡∏∞ Boss ‡∏Å‡πà‡∏≠‡∏ô", ephemeral=True
            )
            return

        user_id = self.user.id
        user_name = self.user.display_name

        if user_id in user_party:
            await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏ä‡πâ /leave ‡∏Å‡πà‡∏≠‡∏ô", ephemeral=True)
            return

        members = parties[self.selected_time][self.selected_ch][self.selected_boss]
        if len(members) >= 5:
            await interaction.response.send_message("‚ùå ‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ô‡∏µ‡πâ‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            return

        members.append(user_name)
        user_party[user_id] = (self.selected_time, self.selected_ch, self.selected_boss)
        await interaction.response.send_message(
            f"‚úÖ {user_name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ {self.selected_time} {self.selected_ch} {self.selected_boss}",
            ephemeral=True
        )
        self.stop()

# ------------------------------
# Slash Commands
# ------------------------------
@bot.tree.command(name="join", description="‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏ß‡∏•‡∏≤ / Channel / Boss ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô)")
async def join(interaction: discord.Interaction):
    view = JoinView(interaction.user)
    await interaction.response.send_message("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏ß‡∏•‡∏≤ / Channel / Boss ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", view=view, ephemeral=True)

@bot.tree.command(name="leave", description="‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
async def leave(interaction: discord.Interaction):
    user_id = interaction.user.id
    if user_id not in user_party:
        await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡πÉ‡∏î‡πÜ", ephemeral=True)
        return

    time, ch, boss = user_party[user_id]
    parties[time][ch][boss].remove(interaction.user.display_name)
    del user_party[user_id]
    await interaction.response.send_message(f"‚Ü©Ô∏è {interaction.user.display_name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ {time} {ch} {boss}", ephemeral=True)

@bot.tree.command(name="list", description="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ")
@app_commands.describe(time="‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô 16.00 (‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)")
async def list_party(interaction: discord.Interaction, time: str = None):
    if time:
        if time not in parties:
            await interaction.response.send_message("‚ö†Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (16.00, 18.00, 22.00)", ephemeral=True)
            return
        msg = f"üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time}\n"
        for ch in parties[time]:
            msg += f"\n**{ch}**\n"
            for boss, members in parties[time][ch].items():
                names = ", ".join(members) if members else "-"
                msg += f"- {boss}: {names}\n"
        await interaction.response.send_message(msg, ephemeral=True)
    else:
        msg = "üìã **‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡∏•‡∏≤**\n"
        for t in parties:
            msg += f"\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤ {t}\n"
            for ch in parties[t]:
                msg += f"\n**{ch}**\n"
                for boss, members in parties[t][ch].items():
                    names = ", ".join(members) if members else "-"
                    msg += f"- {boss}: {names}\n"
        await interaction.response.send_message(msg, ephemeral=True)

@bot.tree.command(name="clear", description="‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
async def clear(interaction: discord.Interaction):
    for t in parties:
        for ch in parties[t]:
            for boss in parties[t][ch]:
                parties[t][ch][boss] = []
    user_party.clear()
    await interaction.response.send_message("üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

@bot.tree.command(name="helpme", description="‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ")
async def helpme(interaction: discord.Interaction):
    msg = (
        "üìñ **‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ**\n"
        "`/join` ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏ß‡∏•‡∏≤ / Channel / Boss ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô\n"
        "`/leave` ‚Üí ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n"
        "`/list [‡πÄ‡∏ß‡∏•‡∏≤]` ‚Üí ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ (‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô 16.00 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)\n"
        "`/clear` ‚Üí ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n"
    )
    await interaction.response.send_message(msg, ephemeral=True)

# ------------------------------
# Run bot
# ------------------------------
@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"‚úÖ Bot Online as {bot.user}")

bot.run(os.environ["DISCORD_BOT_TOKEN"])
