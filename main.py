import os
import discord
from discord.ext import commands

# ------------------------------
# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Intents
# ------------------------------
intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ------------------------------
# ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ
# ------------------------------
parties = {
    "16.00": {
        "CH-1": {"Sylph": [], "Undine": [], "Gnome": [], "Salamander": []},
        "CH-2": {"Sylph": [], "Undine": [], "Gnome": [], "Salamander": []}
    },
    "18.00": {
        "CH-1": {"Sylph": [], "Undine": [], "Gnome": [], "Salamander": []},
        "CH-2": {"Sylph": [], "Undine": [], "Gnome": [], "Salamander": []}
    },
    "22.00": {
        "CH-1": {"Sylph": [], "Undine": [], "Gnome": [], "Salamander": []},
        "CH-2": {"Sylph": [], "Undine": [], "Gnome": [], "Salamander": []}
    }
}

user_party = {}  # user_id ‚Üí (time, ch, boss)

# ------------------------------
# UI Dropdowns (‡πÄ‡∏ß‡∏•‡∏≤ / CH / Boss)
# ------------------------------
class BossSelect(discord.ui.Select):
    def __init__(self, time, ch):
        self.time = time
        self.ch = ch
        options = [discord.SelectOption(label=boss) for boss in parties[time][ch].keys()]
        super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏≠‡∏™", options=options)

    async def callback(self, interaction: discord.Interaction):
        user_id = interaction.user.id
        user_name = interaction.user.display_name
        boss = self.values[0]

        if user_id in user_party:
            await interaction.response.send_message("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏ä‡πâ !leave ‡∏Å‡πà‡∏≠‡∏ô", ephemeral=True)
            return

        members = parties[self.time][self.ch][boss]
        if len(members) >= 5:
            await interaction.response.send_message("‚ùå ‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ô‡∏µ‡πâ‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            return

        members.append(user_name)
        user_party[user_id] = (self.time, self.ch, boss)
        await interaction.response.send_message(
            f"‚úÖ {user_name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ {self.time} {self.ch} {boss}", ephemeral=True
        )

class ChannelSelect(discord.ui.Select):
    def __init__(self, time):
        self.time = time
        options = [discord.SelectOption(label="CH-1"), discord.SelectOption(label="CH-2")]
        super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Channel", options=options)

    async def callback(self, interaction: discord.Interaction):
        ch = self.values[0]
        view = discord.ui.View()
        view.add_item(BossSelect(self.time, ch))
        await interaction.response.send_message(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Boss ‡πÉ‡∏ô {ch}", view=view, ephemeral=True)

class TimeSelect(discord.ui.Select):
    def __init__(self):
        options = [discord.SelectOption(label=t) for t in parties.keys()]
        super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤", options=options)

    async def callback(self, interaction: discord.Interaction):
        time = self.values[0]
        view = discord.ui.View()
        view.add_item(ChannelSelect(time))
        await interaction.response.send_message(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Channel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ {time}", view=view, ephemeral=True)

# ------------------------------
# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó
# ------------------------------
@bot.command()
async def join(ctx):
    """‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£ Join ‡πÅ‡∏ö‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"""
    view = discord.ui.View()
    view.add_item(TimeSelect())
    await ctx.send("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤:", view=view)

@bot.command()
async def leave(ctx):
    """‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ"""
    user_id = ctx.author.id
    if user_id not in user_party:
        await ctx.send("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡πÉ‡∏î‡πÜ")
        return

    time, ch, boss = user_party[user_id]
    parties[time][ch][boss].remove(ctx.author.display_name)
    del user_party[user_id]
    await ctx.send(f"‚Ü©Ô∏è {ctx.author.display_name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ {time} {ch} {boss}")

@bot.command()
async def list(ctx, time: str = None):
    """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"""
    if time:
        if time not in parties:
            await ctx.send("‚ö†Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÉ‡∏ä‡πâ 16.00, 18.00, 22.00)")
            return
        msg = f"üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time}\n"
        for ch in parties[time]:
            msg += f"\n**{ch}**\n"
            for boss, members in parties[time][ch].items():
                names = ", ".join(members) if members else "-"
                msg += f"- {boss}: {names}\n"
        await ctx.send(msg)
    else:
        msg = "üìã **‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡∏•‡∏≤**\n"
        for t in parties:
            msg += f"\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤ {t}\n"
            for ch in parties[t]:
                msg += f"\n**{ch}**\n"
                for boss, members in parties[t][ch].items():
                    names = ", ".join(members) if members else "-"
                    msg += f"- {boss}: {names}\n"
        await ctx.send(msg)

@bot.command()
async def clear(ctx):
    """‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    for t in parties:
        for ch in parties[t]:
            for boss in parties[t][ch]:
                parties[t][ch][boss] = []
    user_party.clear()
    await ctx.send("üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß")

@bot.command(name="helpme")
async def helpme(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"""
    msg = (
        "üìñ **‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ**\n"
        "`!join` ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤, Channel, Boss ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ\n"
        "`!leave` ‚Üí ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n"
        "`!list [‡πÄ‡∏ß‡∏•‡∏≤]` ‚Üí ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ (‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πà‡∏ô `16.00` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)\n"
        "`!clear` ‚Üí ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ä‡πâ)\n"
    )
    await ctx.send(msg)

# ------------------------------
# Run bot
# ------------------------------
@bot.event
async def on_ready():
    print(f"‚úÖ Bot Online as {bot.user}")

bot.run(os.environ["DISCORD_BOT_TOKEN"])
